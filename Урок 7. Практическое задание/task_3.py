"""
3. Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом.

Найдите в массиве медиану. Медианой называется элемент ряда, делящий его на
две равные части: в одной находятся элементы, которые не меньше медианы,
в другой – не больше медианы. Задачу можно решить без сортировки исходного
массива. Но если это слишком сложно, то используйте метод сортировки,
который не рассматривался на уроках
"""

import random

m = int(input("Введите натуральное число: "))
n = (m * 2) + 1
orig_list = [random.randint(-100, 100) for _ in range(n)]
print("Исходный массив: ", orig_list)


def mid(orig_list):
    func = orig_list
    for i in range(len(orig_list) // 2):
        func.remove(min(orig_list))
    return min(func)
print("Медиана: ", mid(orig_list))




"""
Изначально, идея была: 
Найти "m" минимальных чисел (левая часть), после чего следующее мин.число "m+1" будет медианным.
Сложность возникла с реализацией создания цикла перебора минимальных чисел для левой части.

Поэтому, взял за основу пример из домашней работы с максимальными числами.

"""




# center = len(orig_list) // 2
# left = orig_list[:center]
# right = orig_list[center:]

#
# while i < (n // 2):
#
# for i in orig_list:
#     if i <= center


# перебор эл массива в цикле, формировать лев и прав часть
# спец массива леф и рай
#
# шаг, когда
# if len(left) = len(right):
#
# лев эл не больше, прав не меньше
# то медиана

