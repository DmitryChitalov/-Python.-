"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


companies = {'company_1': 1000,
             'company_2': 2000,
             'company_3': 3000,
             'company_4': 4000,
             'company_5': 5000}

# Solution_1 - O(n log n), т.е. логарифмическая, полагаю, т.к. используется sorted() (по аналогии с lst.sort()), т.е. быстрая сортировка:

print(
    sorted(companies, key= companies.get, reverse= True)[:3]
)

# Solution_2 - O(n) - линейная, т.к. здесь обычная итерация, по сути, ограниченная количеством элементов словаря.
# Думаю, именно поэтому этот способ решения проще и менее затратен:

res = {key:val for key, val in companies.items() if val >= 3000}
print(res)



















