"""
Задание 5.
Пользователь вводит две буквы. Определить,
на каких местах алфавита они стоят, и сколько между ними находится букв.

Подсказка:
Вводим маленькие латинские буквы.
Обратите внимание, что ввести можно по алфавиту, например, a,z
а можно наоборот - z,a
В обоих случаях программа должна вывести корректный результат.
В обоих случаях он 24, но никак не -24
"""
# импортируем модуль для использования последовательности символов ASCII
import string

# ожидаем ввод пользователем границ символов, проверку на количество символов не проводим,
# однако приводим символы к нижнему регистру, т.к. последовательность ASCII составляет буквы
# нижнего и верхнего регистров
USR_SYMBOL_INPUT_A = str.lower(input('Введите первую букву: '))
USR_SYMBOL_INPUT_B = str.lower(input('Введите вторую букву: '))

# находим начальный и конечный индексы в последовательности символов ascii
N = str.find(string.ascii_letters, USR_SYMBOL_INPUT_A)
M = str.find(string.ascii_letters, USR_SYMBOL_INPUT_B)

# необходимо сделать проверку, если первый символ является в последовательности дальше, чем второй,
# то меняем индексы местами, также как и сами символы
if N > M:
    # меняем местами индексы, a - временная переменная
    N, M = M, N
    # меняем символы местами, a - временная переменная
    USR_SYMBOL_INPUT_A, USR_SYMBOL_INPUT_B = USR_SYMBOL_INPUT_B, USR_SYMBOL_INPUT_A

# выводим результат по условию, т.к. последовательность начинается с 0 индекса, то учитываем это
print(f'Место буквы "{USR_SYMBOL_INPUT_A}" в алфавите: {N + 1}')
print(f'Место буквы "{USR_SYMBOL_INPUT_B}" в алфавите: {M + 1}')
print(f'Букв между введеными: {len(string.ascii_letters[N:M]) - 1}')
