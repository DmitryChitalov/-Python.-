"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""


def recursion_reverse(num, inverse_number):
    if num == 0:
        return inverse_number
    # Цикл выполняется пока поочередно перебирая цифры числа не дойдет до последней цифры
    else:
        # увеличиваем разрядность второго числа
        # добавляем очередную цифру к формируемому перевернутому числу
        inverse_number = inverse_number * 10 + num % 10
        # переходим к следующей цифре исходного числа
        return recursion_reverse(num // 10, inverse_number)


while True:
    try:
        # Запрос на ввод числа
        NUMBER = int(input('Введите целое положительное число:\r\n'))
        # Проверка числа что оно не отрицательное
        if NUMBER < 0:
            raise IOError
    except (ValueError, TypeError, IOError):
        print('Ошибка ввода. Требуется ввести положительное целое число.')
    else:
        # Вывод результата
        print(f'Исходное число: {NUMBER}\r\nПеревернутое число: {recursion_reverse(NUMBER, 0)}')
        break
