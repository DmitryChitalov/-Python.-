"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
Для извлечения цифр числа используйте арифм. операции

Пример:
Введите натуральное число: 44
В числе 44 всего 2 цифр, из которых 2 чётных и 0 нечётных

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ ЦИКЛ
"""

import sys

try:
    NUMBER = int(input("Введите натуральное число: "))
except ValueError:
    print("Некорректные  данные, программа завершена")
    sys.exit()  # pylint советует использовать эту функцию вместо quit()

if NUMBER < 1:
    print("Число должно быть натуральным")
    sys.exit()

NUMBER_EVEN, NUMBER_ODD = 0, 0  # Счетчики четных и нечетных цифр
NUMBER_I = NUMBER  # Число для использования в итерациях (будет изменяться)

while True:
    if NUMBER_I % 10 % 2:
        NUMBER_ODD += 1
    else:
        NUMBER_EVEN += 1

    NUMBER_I = NUMBER_I // 10
    if not NUMBER_I:
        break

print(f"В числе {NUMBER} всего {NUMBER_EVEN+NUMBER_ODD} цифр, "
      f"из которых {NUMBER_EVEN} чётных и {NUMBER_ODD} нечётных")
