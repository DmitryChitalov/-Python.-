"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
a = четные
b = нечетные
"""
def fun(number, a=0, b=0):
    if number == 0:
        return a, b
    else:
        c= number % 10
        number = number // 10
        if c % 2 == 0:
            a += 1
            return fun(number, a, b)
        else:
            b += 1
            return fun(number, a, b)


try:
    NUMBER = int(input("Введите натуральное число: "))
    print(f"{fun(NUMBER)}")
except ValueError:
    print("Вы ввели некорректные данные")
