"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""


def ev_unev(num, ev, unev):
    if num == 0:
        return f'Количество четных и нечетных цифр в числе равно: {ev}, {unev}'
    else:
        a = num % 10
        if a % 2 == 0:
            ev += 1
        else:
            unev += 1
        return ev_unev(num // 10, ev, unev)

print(ev_unev(77777, 0, 0))