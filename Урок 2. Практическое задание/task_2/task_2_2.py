"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def remains(figure):
    return int(figure) % 2


def not_even(NUMBER):
    if NUMBER == []:
        return 0
    return remains(NUMBER[0]) + not_even(NUMBER[1:])


NUMBER = input('Введите натуральное число:')
NUMBER1 = list(NUMBER)
print(f'В числе {NUMBER} всего {len(NUMBER)} цифр, '
      f'из которых {len(NUMBER1)-not_even(NUMBER1)} '
      f'чётных и  {not_even(NUMBER1)} нечётных')

