"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""
def cal_ev_not_ev():
    try:
        NUMBER = int(input('Введите число (0 чтобы выйти): '))
        if NUMBER == 0:
            print('ok, отдыхаем.')
            return
        EVEN = 0
        NOT_EV = 0
        for i in str(NUMBER):
            i = int(i)
            if (i % 2) == 0:
                EVEN += 1
            else:
                NOT_EV += 1
        S = EVEN + NOT_EV
        print(f'В числе {NUMBER} {S} цифры, четных - {EVEN}, не четных - {NOT_EV}')
        return cal_ev_not_ev()
    except ValueError:
        print('Вы ввели не число, давайте сначала.')
        return cal_ev_not_ev()

cal_ev_not_ev()