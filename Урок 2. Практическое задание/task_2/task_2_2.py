"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""

number = int(input('Введите число: '))


def rec_even(num):
    ev = 0
    if num < 10:
        if num % 2 == 0:
            ev += 1

        return ev
    else:
        rem = num % 10
        if rem % 2 == 0:
            ev += 1
        return ev + rec_even(num // 10)


def rec_odd(num):
    odd = 0
    if num < 10:
        if num % 2 != 0:
            odd += 1

        return odd
    else:
        rem = num % 10
        if rem % 2 != 0:
            odd += 1
        return odd + rec_even(num // 10)


print(f'Количество четных и нечетных '
      f'цифр в числе {number} равно соответсвенно'
      f' {rec_even(number)} и {rec_odd(number)} ')
