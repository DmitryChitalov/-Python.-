"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""


def calculate_even_odd(n, e, o):
    k = n % 10
    if k % 2 == 0:
        e += 1
    else:
        o += 1
    if n // 10 == 0:
        return e, o
    else:
        n = n // 10
        return calculate_even_odd(n, e, o)


while True:
    try:
        NUM = int(input('Введите число: '))
        break
    except ValueError:
        print('Некорректный ввод. Введите целое число')
EVEN = 0
ODD = 0
EVEN1, ODD1 = calculate_even_odd(NUM, EVEN, ODD)
print(f'В числе всего {EVEN1 + ODD1} цифр, из которых {EVEN1} четных и {ODD1} нечетных')
