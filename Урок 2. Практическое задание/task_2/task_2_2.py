"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
USER_NUMBER = int(input('Введите число: '))


def units(num):
    return num % 10


def parse_number(number, even=0, odd=0):
    unit = units(number)
    if unit % 2 == 0:
        even += 1
    elif unit % 2 != 0:
        odd += 1
    if number < 10:
        print(f'Количество четных и нечетных цифр в числе равно: {(even, odd)}')
    else:
        parse_number(number // 10, even, odd)


parse_number(USER_NUMBER)
