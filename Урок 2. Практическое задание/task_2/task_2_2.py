"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""

DIV = 10
EVEN = 0
ODD = 0
NUMBER = int(input('Введите число : '))


def func(number, div, even, odd):
    if number // div != 0:
        if int((number % div) // (div / 10)) % 2 == 0:
            even += 1
        else:
            odd += 1
        return func(number, div * 10, even, odd)
    return f'В числе {number} , {even + odd} цифр , {even} четных и {odd} нечетных'


print(func(NUMBER, DIV, EVEN, ODD))
