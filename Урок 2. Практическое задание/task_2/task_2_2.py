"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""


def recursion_nums(num, odd=0, even=0):
    """Проверка на четность и нечетность цифр в числе"""
    res_num = num % 10
    if res_num % 2 == 0:
        even += 1
    else:
        odd += 1
    num //= 10
    if num == 0:
        return print(f"Количество четных и нечетных цифр в числе равно: ({even}, {odd})")
    return recursion_nums(num, odd, even)


NUMBER = int(input("Введите число: "))
recursion_nums(NUMBER)
