"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""


def recur(number, EVEN, ODD):
    if number == 0:
        return print(f"четных: {EVEN}, нечетных: {ODD}")
    else:
        if (number % 10) == 0 or (number % 10) % 2 == 0:
            recur(number=number // 10, EVEN=EVEN + 1, ODD=ODD)
        else:
            recur(number=number // 10, EVEN=EVEN, ODD=ODD + 1)


recur(int(input('Введите число: ')), EVEN=0, ODD=0)
