"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 45
Введите второе число: 56
Результат 45 + 56 = 101
Введите операцию (+, -, *, / или 0 для выхода): rth
Неверная операция. Повторите ввод
Введите операцию (+, -, *, / или 0 для выхода):

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ ЦИКЛ
"""

print('Вам требуется ввести сначало знак вычесления, затем числа с которыми треубется совершить действие. Ввод "0" '
      'вместо знака прекратит работу программы')

while True:
    sign = input('Введите знак +, -, * или /: ')
    if sign == '0':
        break
    elif sign in ('+', '-', '*', '/'):
        x = int(input('Введите число X: '))
        y = int(input('Введите число Y: ' ))
        if sign == '+':
            print(x + y)
        elif sign == '-':
            print(x - y)
        elif sign == '*':
            print(x * y)
        else:
            if y == 0:
                print('Деление на 0 не возможно!')
            else:
                print(x // y)
    else:
        print('Введен не верный знак операции')
