"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 45
Введите второе число: 56
Результат 45 + 56 = 101
Введите операцию (+, -, *, / или 0 для выхода): rth
Неверная операция. Повторите ввод
Введите операцию (+, -, *, / или 0 для выхода):

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ ЦИКЛ
"""
import re

while True:
    OPERATOR = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if OPERATOR == '0':
        print(f'Exit')
        break
    if re.match(r'[^\-\+\*\/]', OPERATOR) or len(OPERATOR) > 1:
        print(f'Неверная операция. Повторите ввод!')
        continue
    try:
        OPERAND_1 = int(input('Введите первое число: '))
        OPERAND_2 = int(input('Введите второе число: '))
        try:
            print(f'Результат {OPERAND_1} {OPERATOR} {OPERAND_2} = '
                  f'{eval(str(OPERAND_1) + OPERATOR + str(OPERAND_2))}')
        except ZeroDivisionError:
            print(f'На ноль делить нельзя')
    except ValueError:
        print(f'Неверный ввод!')
