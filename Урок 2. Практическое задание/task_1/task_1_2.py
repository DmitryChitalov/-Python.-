"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""

OPERATION = "+-*/0"


def user_input(msg="", valid_characters="float"):
    """
    :param msg: Ссообщение для пользователя
    :param valid_characters: типы ввода 'float' или 'operator'
    :return:
    """
    error = "Ошибка. Не допустимый ввод."

    usr_input = input(msg)
    # task_1_2.py:51:4: R1705: Unnecessary "elif" after "return" (no-else-return)
    # не понял почему pylint не нравиться, elif требуется применять.
    if valid_characters == "float":
        try:
            usr_float = float(usr_input)
        except ValueError:
            print(error)
            return user_input(msg, valid_characters)
        return usr_float
    elif valid_characters == "operator":
        if usr_input not in OPERATION:
            print(error)
            return user_input(msg, valid_characters)
        return usr_input.strip()
    raise ValueError('Не допустимый тип.')


def calc():
    """
    Калькулятор
    """
    operator = user_input(
        "Введите операцию (+, -, *, / или 0 для выхода): ",
        "operator")
    if operator == "0":
        return
    number1 = user_input("Введите первое число: ")
    number2 = user_input("Введите второе число: ")
    if operator == "/" and number2 == 0:
        print("Ошибка. Деление на ноль")
        calc()
    else:
        str_calc = f"{number1} {operator} {number2}"
        # Использую val, т.к. в данном случае он безопасен.
        print(f"Результат {str_calc} = {eval(str_calc)}")
        calc()


if __name__ == "__main__":

    calc()
