"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""

from re import sub


def math() -> [float, None]:
    start = sub(r"[\s]", "", input("Введите 1 для начала, или 0 для выхода из программы: "))

    if start == "0":
        return
    elif start == "1":
        try:
            print(
                "Это программа калькулятор, для выполнения простых действий"
                "введите первое число, оператор и второе число"
            )
            number1 = float(sub(r"[\s]", "", input("Введите первое число: ")))
            operator = sub(r"[\s]", "", input("Введите действие [+|-|%|*]: "))
            number2 = float(sub(r"[\s]", "", input("Введите второе число: ")))
        except ValueError:
            print("Вы ввели неверное значение одного из чисел, попробуйте еще раз")
            return math()

        if operator not in ["+", "-", "%", "*"]:
            print("Вы ввели неверный оператор, попробуйте еще раз")
            return math()

        if operator == "%" and number2 == 0:
            print("Деление на ноль, попробуйте еще")
            return math()

        # Тут делаю через eval чтобы не делать условия if, на практике eval лучше заменить на условие
        print(eval(f"{number1} {operator} {number2}"))
        math()
    else:
        print("Вы ввели неверное действие, попробуйте еще раз")
        math()


math()
