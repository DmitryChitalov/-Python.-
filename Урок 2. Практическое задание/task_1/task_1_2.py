"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""


# Способ 2
def user_input():
    """
    Функция не принимает каких-либо значений
    :return: функция запрашивает ввод у пользователя двух чисел и возвращает их
    """
    user_number_a = int(input('Введите первое число: '))
    user_number_b = int(input('Введите второе число: '))
    return user_number_a, user_number_b


def recursion():
    """
    Функция не принимает каких-либо значений
    :return: завершение рекурсии
    """
    # дабы не путаться далее, введем переменные для кодов операций, а также для "0"
    op_plus = ord('+')
    op_minus = ord('-')
    op_mult = ord('*')
    op_div = ord('/')
    op_zero = ord('0')

    try:
        # запрашиваем ввод знака операции
        user_operation = ord(input('Введите операцию (+, -, *, / или 0 для выхода): '))

        # проверяем соответствие знака, тем что мы хотим использовать
        # если "0", то цикл прерываем, если такого знака у нас нет, то ошибка
        if user_operation == op_zero:
            return
        if user_operation == op_plus:
            number_a, number_b = user_input()
            print(f'Результат {number_a} + {number_b} = {number_a + number_b}')
        elif user_operation == op_minus:
            number_a, number_b = user_input()
            print(f'Результат {number_a} - {number_b} = {number_a - number_b}')
        elif user_operation == op_mult:
            number_a, number_b = user_input()
            print(f'Результат {number_a} * {number_b} = {number_a * number_b}')
        elif user_operation == op_div:
            number_a, number_b = user_input()
            print(f'Результат {number_a} / {number_b} = {number_a / number_b}')
        else:
            print('Неверная операция. Повторите ввод')
        recursion()

    except TypeError:
        # если ловим строку, то выводим ошибку
        print('Неверная операция. Повторите ввод')
        recursion()


# вызываем нашу функцию recursion
recursion()
