"""
1.	Подсчитать, сколько было выделено памяти под переменные в ранее
разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с
наиболее эффективным использованием памяти.
Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько
вариантов кода для одной и той же задачи.
Результаты анализа вставьте в виде комментариев к коду.
Также укажите в комментариях версию Python и разрядность вашей ОС.
ВНИМАНИЕ: ЗАДАНИЯ, В КОТОРЫХ БУДУТ ГОЛЫЕ ЦИФРЫ ЗАМЕРОВ (БЕЗ АНАЛИТИКИ)
БУДУТ ПРИНИМАТЬСЯ С ОЦЕНКОЙ УДОВЛЕТВОРИТЕЛЬНО
"""
""" Для превого примера была взята седьмая задача из 3 урока"""

from memory_profiler import profile
from random import randint

@profile

def NUM(LST):
    NUM_MIN = min(LST)
    COUNT = 0
    for i in LST:
        if i == NUM_MIN:
            LST.remove(i)
            COUNT += 1
    print(f"Меньшое число: {NUM_MIN} встречается в масиве {LST} - {COUNT} раз")

    if COUNT == 1:
        NUM_MIN_2 = min(LST)
        print(f"Второе мининмальное число {NUM_MIN_2}")

LST = [randint(-999999, 999999) for i in range(99999)]
NUM(LST)

"""Line #    Mem usage    Increment   Line Contents
================================================
    18     18.0 MiB     18.0 MiB   @profile
    19                             
    20                             def NUM(LST):
    21     18.0 MiB      0.0 MiB       NUM_MIN = min(LST)
    22     18.0 MiB      0.0 MiB       COUNT = 0
    23     18.0 MiB      0.0 MiB       for i in LST:
    24     18.0 MiB      0.0 MiB           if i == NUM_MIN:
    25     18.0 MiB      0.0 MiB               LST.remove(i)
    26     18.0 MiB      0.0 MiB               COUNT += 1
    27     18.2 MiB      0.2 MiB       print(f"Меньшое число: {NUM_MIN} встречается в масиве {LST} - {COUNT} раз")
    28                             
    29     18.2 MiB      0.0 MiB       if COUNT == 1:
    30     18.2 MiB      0.0 MiB           NUM_MIN_2 = min(LST)
    31     18.2 MiB      0.0 MiB           print(f"Второе мининмальное число {NUM_MIN_2}")
"""
"""По данным замерам можно сделать вывод, что 0,2 MiB заняло объект Print. Это связанно с выводом массива.
Для очистки можно использвать команду del"""