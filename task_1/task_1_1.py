"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 45
Введите второе число: 56
Результат 45 + 56 = 101
Введите операцию (+, -, *, / или 0 для выхода): rth
Неверная операция. Повторите ввод
Введите операцию (+, -, *, / или 0 для выхода):
"""
def calculate(operation):
    while operation != 0:
        print(f"Введите x:")
        x = int(input())
        print(f"Введите y:")
        y = int(input())
        print(f"{x}, {y}")
        print(f"Введите операцию (+,-,*, /, 0 - для выхода)")
        operation = input()
        print(operation)
        if operation == '+':
            print(x + y)
        elif operation == '-':
            print(x - y)
        elif operation == '*':
            print(x * y)
        elif operation == '/':
            if y == 0:
                print(f"Деление не возможно, y равен 0")
            else:
                print(x / y)
        elif operation == '0':
            return operation
        else:
            print('Неправильный знак операции')


calculate(1)
