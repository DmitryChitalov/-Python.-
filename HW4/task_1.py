"""
1. Проанализировать скорость и сложность одного любого алгоритма,
разработанных в рамках домашнего задания первых трех уроков.
Примечание: попробуйте написать несколько реализаций алгоритма и сравнить их.
Подсказка:
1) возьмите 2-3 задачи, реализованные ранее, сделайте замеры на разных входных данных
2) сделайте для каждой из задач оптимизацию (придумайте что можно оптимизировать)
и также выполните замеры на уже оптимизированных алгоритмах
3) опишите результаты - где, что эффективнее и почему.
ВНИМАНИЕ: ЗАДАНИЯ, В КОТОРЫХ БУДУТ ГОЛЫЕ ЦИФРЫ ЗАМЕРОВ (БЕЗ АНАЛИТИКИ)
БУДУТ ПРИНИМАТЬСЯ С ОЦЕНКОЙ УДОВЛЕТВОРИТЕЛЬНО
"""

"""Для первого примера взял решение из ДЗ3 №2, где сравниваем 2 одинаковых решения, но второй вариант короче"""

import timeit

"""Вариант 1"""
def SAVE(ONE_LIST):
    NEW_LIST = []
    for elem in ONE_LIST:
        if elem % 2 == 0:
            NEW_LIST.append(ONE_LIST.index(elem))
    print(f"Первый массив {ONE_LIST}, результат второй мвссив из первого {NEW_LIST}")


"""Вариант 2"""
def SAVE_2(ONE_LIST):
    print(
        f"Первый массив {ONE_LIST}, результат второй мвссив из первого "
        f"{[elem for elem in range(len(ONE_LIST)) if ONE_LIST[elem] % 2 == 0]}"
    )

ONE_LIST = [8, 3, 15, 6, 4, 2]
SAVE(ONE_LIST)
SAVE_2(ONE_LIST)

print(
    timeit.timeit(
        "SAVE(ONE_LIST)",
        setup="from __main__ import SAVE, ONE_LIST",
        number=1000)
)
"""Вариант 1 замер времени составил: 0.012444947002222762"""

print(
    timeit.timeit(
        "SAVE_2(ONE_LIST)",
        setup="from __main__ import SAVE_2, ONE_LIST",
        number=1000)
)


"""Вариант 2 замер времени составил: 0.01114537799730897"""
"""Вывод: уменьшение кода и решение в одну строчку дает дает приемущество, но не большое"""

