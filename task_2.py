"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def odd(number):
    count_odd = 0
    numdig = len(str(number))
    dig = number % 10
    if dig % 2:
        count_odd += 1
    if numdig != 1:
        return count_odd + odd(number // 10)
    else:
        return count_odd

def even_odd(number):
    numdig = len(str(number))
    count_odd = odd(number)
    count_even = numdig - count_odd
    return count_even, count_odd






print (even_odd(1233333))