"""
Определение количества различных подстрок с использованием хеш-функции.
Пусть дана строка S длиной N, состоящая только из маленьких латинских букв.
Требуется найти количество различных подстрок в этой строке.

Пример:
строка: рара

подстроки:
рар
ра
р
а
ар
ара

Итог: 6 подстрок
"""
import hashlib

STRNG = "papa"
NSTR = 0  #
dct = {}


def func(strng):
    for i in range(len(strng)):
        l = len(strng) - i
        # print(f'{i}, {l}')
        if l == 1:
            break
        for j in range(l):
            left = j
            right = j + i + 1
            """Просто добавляем новый элемент в словарь, если ключ уже существует
            он просто перезаписывает значение. Но тк значения у нас одинаковые 
            для одинаковых подстрок мы получаем список уникальных keys которые 
            являются хешами подстрок.
            Получается мы по хешам можем получать нужные значения словаря."""
            dct[hash(strng[left: right])] = strng[left: right]
    return dct


func(STRNG)
# print(dct)
print(f'Строка = {STRNG}\n')
for k in dct.values():
    NSTR += 1
    print(k)

print(f'\nИтого: {NSTR} подстрок')
"""
i = 1 +++++++++
1-2(-6)
2-3(-5)
3-4(-4)
4-5(-3)
5-6(-2)
6-7(-1)
7-8(-0)
i = 2 +++++++++++++
1-3(-5)
2-4(-4)
3-5(-3)
4-6(-2)
5-7(-1)
6-8(-0)
i = 3+++++++++++++++
1-4(-4)
2-5(-3)
3-6(-2)
4-7(-1)
5-8(-0)

"""