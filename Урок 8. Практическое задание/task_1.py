"""
Определение количества различных подстрок с использованием хеш-функции.
Пусть дана строка S длиной N, состоящая только из маленьких латинских букв.
Требуется найти количество различных подстрок в этой строке.

Пример:
строка: рара

подстроки:
рар
ра
р
а
ар
ара

Итог: 6 подстрок
"""

import hashlib


a = input('Введите строку состоящую из маленьких букв\n')
b = []      # Создаем пустой список, в который будем вносить подстроки
for i in range(0, len(a)):       # считаем от 0 до длинны строки
    for j in range(i + 1, len(a) + 1):  # считаем от прошлого счёта + 1 до длинны строки +1
        g = a[i:j]           # Находим срезы от [0:1] до [3:4]
        print(g.encode('utf-8'))     # Кодируем срез в байты
        print(hashlib.sha1(g.encode('utf-8')))  # Хэшируем наши срезы в байты
        print(hashlib.sha1(g.encode('utf-8')).hexdigest())  # Представляем хэш в шестнадцатяричной форме
        b.append(hashlib.sha1(g.encode('utf-8')).hexdigest())  # добавляем хэш в список

b.remove(hashlib.sha1(a.encode('utf-8')).hexdigest())    # Удаляем хэщ целой(полной) строки
r = set(b)    # Избавляемся от повторов изменяя тип данных на кортеж
print(f'Колличество различных подстрок в строке {a} равно {len(r)}')




