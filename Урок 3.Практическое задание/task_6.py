"""
Задание_6.	В одномерном массиве найти сумму элементов,
находящихся между минимальным и максимальным элементами.
Сами минимальный и максимальный элементы в сумму не включать.
Подсказки:
1) берем первый минимальный и максимальный
2) не забудьте, что сначала может быть минимальный, потом максимальный
а может - наоборот. во всех этих случаях нужна корректная работа
Пример:
Введите количество элементов в массиве: 10
Массив: [88, 58, 50, 77, 49, 6, 42, 67, 14, 79]
Сумма элементов между минимальным (6)  и максимальным (88) элементами: 234
"""

import random

while True:
    # Запрос от пользователя количество элементов в массиве
    try:
        COUNT_NUMBERS = int(input('Введите количество элементов массива:\r\n'))
        if COUNT_NUMBERS < 0:
            raise IOError
    except (ValueError, TypeError, IOError):
        print('Ошибка ввода. Необходимо ввести целое положительное число.')
    else:
        # Генерирование элементов массива случайными значениями целых чисел в диапазоне от 1 до 100
        ARRAY_NUMBERS = [random.randint(1, 100) for _ in range(COUNT_NUMBERS)]
        # Вывод исходного массива
        print(f'Массив: {ARRAY_NUMBERS}')
        # Инициализация переменной суммы элементов, находящихся между минимальным и максимальным элементами
        SUM_NUMBERS = 0
        # Поиск индексов минимального и максимального элементов
        INDEX_MIN, INDEX_MAX = [f(range(len(ARRAY_NUMBERS)), key=ARRAY_NUMBERS.__getitem__) for f in [min, max]]
        # Подсчет суммы элементов массива
        for index_element in range(min(INDEX_MIN, INDEX_MAX) + 1, max(INDEX_MIN, INDEX_MAX)):
            SUM_NUMBERS += ARRAY_NUMBERS[index_element]
        print(f'Сумма элементов между минимальным {ARRAY_NUMBERS[INDEX_MIN]} '
              f'и максимальным {ARRAY_NUMBERS[INDEX_MAX]} элементами:  {SUM_NUMBERS}')
        break
